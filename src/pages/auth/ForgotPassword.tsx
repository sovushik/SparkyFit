import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import { useForm } from 'react-hook-form';
import { motion } from 'framer-motion';
import { Mail, ArrowLeft, Send, CheckCircle } from 'lucide-react';
import toast from 'react-hot-toast';

// Components
import { Button } from '../../components/ui/Button';
import { Input } from '../../components/ui/Input';

// Utils
import { validationUtils } from '../../utils';
import { authService } from '../../utils/api';

interface ForgotPasswordForm {
  email: string;
}

const ForgotPassword: React.FC = () => {
  const [isLoading, setIsLoading] = useState(false);
  const [isEmailSent, setIsEmailSent] = useState(false);
  const [sentEmail, setSentEmail] = useState('');

  const {
    register,
    handleSubmit,
    formState: { errors, isValid }
  } = useForm<ForgotPasswordForm>({
    mode: 'onChange',
    defaultValues: {
      email: ''
    }
  });

  const onSubmit = async (data: ForgotPasswordForm) => {
    setIsLoading(true);

    try {
      await authService.forgotPassword(data.email);
      setSentEmail(data.email);
      setIsEmailSent(true);
      toast.success('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Å–±—Ä–æ—Å—É –ø–∞—Ä–æ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ email');
    } catch (error: any) {
      console.error('Forgot password failed:', error);
      
      if (error.message?.includes('User not found')) {
        toast.error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email –Ω–µ –Ω–∞–π–¥–µ–Ω');
      } else if (error.message?.includes('Too many requests')) {
        toast.error('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
      } else {
        toast.error(error.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ email');
      }
    } finally {
      setIsLoading(false);
    }
  };

  const handleResendEmail = async () => {
    setIsLoading(true);
    
    try {
      await authService.forgotPassword(sentEmail);
      toast.success('Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–≤—Ç–æ—Ä–Ω–æ');
    } catch (error: any) {
      toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email –ø–æ–≤—Ç–æ—Ä–Ω–æ');
    } finally {
      setIsLoading(false);
    }
  };

  if (isEmailSent) {
    return (
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        className="w-full text-center"
      >
        {/* Success Icon */}
        <motion.div
          initial={{ scale: 0 }}
          animate={{ scale: 1 }}
          transition={{ delay: 0.2, type: 'spring', stiffness: 200 }}
          className="mx-auto w-16 h-16 bg-green-100 dark:bg-green-900/30 rounded-full flex items-center justify-center mb-6"
        >
          <CheckCircle className="w-8 h-8 text-green-600 dark:text-green-400" />
        </motion.div>

        {/* Success Message */}
        <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-4">
          –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à email
        </h2>
        <p className="text-gray-600 dark:text-gray-300 mb-6 leading-relaxed">
          –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Å–±—Ä–æ—Å—É –ø–∞—Ä–æ–ª—è –Ω–∞{' '}
          <span className="font-medium text-gray-900 dark:text-white">
            {sentEmail}
          </span>
        </p>

        {/* Instructions */}
        <div className="bg-gray-50 dark:bg-gray-800 rounded-lg p-4 mb-6 text-left">
          <h3 className="font-medium text-gray-900 dark:text-white mb-2">
            –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:
          </h3>
          <ol className="text-sm text-gray-600 dark:text-gray-300 space-y-1">
            <li>1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É –≤—Ö–æ–¥—è—â–∏—Ö –≤ –≤–∞—à–µ–º email</li>
            <li>2. –ï—Å–ª–∏ –ø–∏—Å—å–º–∞ –Ω–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É "–°–ø–∞–º"</li>
            <li>3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤ –ø–∏—Å—å–º–µ</li>
            <li>4. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å</li>
          </ol>
        </div>

        {/* Actions */}
        <div className="space-y-4">
          <Button
            variant="outline"
            fullWidth
            onClick={handleResendEmail}
            loading={isLoading}
          >
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ
          </Button>
          
          <Link to="/auth/login">
            <Button variant="ghost" fullWidth leftIcon={ArrowLeft}>
              –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—Ö–æ–¥—É
            </Button>
          </Link>
        </div>

        {/* Support */}
        <div className="mt-8 text-sm text-gray-500 dark:text-gray-400">
          –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?{' '}
          <a 
            href="mailto:support@sparkyfit.ru" 
            className="text-primary-600 hover:text-primary-500 dark:text-primary-400 dark:hover:text-primary-300 font-medium"
          >
            –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
          </a>
        </div>
      </motion.div>
    );
  }

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      className="w-full"
    >
      {/* Header */}
      <div className="text-center mb-8">
        <h2 className="text-3xl font-bold text-gray-900 dark:text-white mb-2">
          –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
        </h2>
        <p className="text-gray-600 dark:text-gray-300">
          –í–≤–µ–¥–∏—Ç–µ –≤–∞—à email –∏ –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é
        </p>
      </div>

      {/* Form */}
      <form onSubmit={handleSubmit(onSubmit)} className="space-y-6">
        <Input
          label="Email"
          type="email"
          leftIcon={Mail}
          placeholder="your@email.com"
          description="–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –Ω–∞ —ç—Ç–æ—Ç email"
          error={errors.email?.message}
          {...register('email', {
            required: 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω',
            validate: (value) => validationUtils.isValidEmail(value) || '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email'
          })}
        />

        <Button
          type="submit"
          fullWidth
          loading={isLoading}
          disabled={!isValid || isLoading}
          leftIcon={Send}
        >
          –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        </Button>
      </form>

      {/* Back to Login */}
      <div className="mt-8 text-center">
        <Link
          to="/auth/login"
          className="inline-flex items-center text-sm text-primary-600 hover:text-primary-500 dark:text-primary-400 dark:hover:text-primary-300 font-medium"
        >
          <ArrowLeft className="w-4 h-4 mr-2" />
          –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—Ö–æ–¥—É
        </Link>
      </div>

      {/* Help Text */}
      <div className="mt-8 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
        <div className="flex items-start space-x-3">
          <div className="flex-shrink-0">
            <span className="text-2xl">üí°</span>
          </div>
          <div className="text-sm">
            <p className="font-medium text-blue-900 dark:text-blue-100 mb-1">
              –°–æ–≤–µ—Ç –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            </p>
            <p className="text-blue-700 dark:text-blue-200">
              –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ. 
              –í–∞—à –ø–∞—Ä–æ–ª—å –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º.
            </p>
          </div>
        </div>
      </div>
    </motion.div>
  );
};

export default ForgotPassword;